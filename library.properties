name=AceCRC
version=0.1.0
author=Brian T. Park <brian@xparks.net>
maintainer=Brian T. Park <brian@xparks.net>
sentence=Cyclic Redundancy Check (CRC) algorithms (e.g. crc32(), crc16ccitt()) are progammatically converted from pycrc to Arduino C++, including variants (e.g. 4-bit versus 8-bit tables) that trade space and time.
paragraph=Three variants of each algorithm are generated: the 'bit' variant is the brute force bit-by-bit loop which is the smallest and slowest; the 'nibble' variant uses a 4-bit table which uses more memory but is faster; the 'byte' variant uses an 8-bit table for the most performance but consumes the largest amount of memory.
category=Data Processing
url=https://github.com/bxparks/AceCRC
architectures=*
depends=AceCommon
